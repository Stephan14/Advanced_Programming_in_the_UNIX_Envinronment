1.除了对原始IO设备的IO，所有的磁盘IO都要通过内核的缓存区。所说的“不带缓存的IO”是指在用户进程中对read和write函数不进行缓存，而是进行系统调用
2.
3.每一次执行open函数就会创建一个新的文件表项，但是，因为两次打开的同一个文件，所以两个文件选项表指向同一V节点
4. 
command > file 2>&1:首先是command > file将标准输出重定向到file中， 2>&1 是标准错误拷贝了标准输出的行为，也就是同样被重定向到file中，最终结果就是标准输出和错误都被重定向到file中。

command 2>&1 >file:2>&1 标准错误拷贝了标准输出的行为，但此时标准输出还是在终端。>file 后输出才被重定向到file，但标准错误仍然保持在终端。

用strace可以看到：
    1. command > file 2>&1
    这个命令中实现重定向的关键系统调用序列是：
    open(file) == 3
    dup2(3,1)
    dup2(1,2)

    2. command 2>&1 >file
    这个命令中实现重定向的关键系统调用序列是：
    dup2(1,2)
    open(file) == 3
    dup2(3,1)

5.仍然可以使用lseek和read读文件；但是，writ函数在写文件之前会将偏移量设置到文件尾，也就是说只能在文件尾进行读写。

